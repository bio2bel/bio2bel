[tox]
envlist = coverage-clean, rst-lint, manifest, docs, py, coverage-report

[testenv]
commands = coverage run -p -m pytest tests {posargs}
passenv = CI TRAVIS TRAVIS_*
deps =
    coverage
    pytest
    pybel
    flask
    flask-admin
whitelist_externals =
    /bin/cat
    /bin/cp
    /bin/mkdir

[testenv:coverage-clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:coverage-report]
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage report

[testenv:manifest]
deps = check-manifest
commands = check-manifest
skip_install = true

[testenv:docs]
changedir = docs
deps =
    sphinx
    sphinx_rtd_theme
commands =
    mkdir -p {envtmpdir}
    cp -r source {envtmpdir}/source
    sphinx-build -W -b html -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/html
    sphinx-build -W -b coverage -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/coverage
    cat {envtmpdir}/build/coverage/c.txt
    cat {envtmpdir}/build/coverage/python.txt

[testenv:rst-lint]
commands = rst-lint README.rst
skip_install = true
deps =
    restructuredtext_lint
    pygments

[testenv:flake8]
basepython = python3
skip_install = true
deps =
    flake8
    flake8-docstrings>=0.2.7
    flake8-import-order>=0.9
    pep8-naming
    flake8-colors
commands =
    flake8 src/bio2bel/ tests/ setup.py

[flake8]
ignore = E501
exclude =
    .tox,
    .git,
    __pycache__,
    docs/source/conf.py,
    build,
    dist,
    tests/fixtures/*,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs
max-complexity = 10
import-order-style = google
application-import-names = flake8
format = ${cyan}%(path)s${reset}:${yellow_bold}%(row)d${reset}:${green_bold}%(col)d${reset}: ${red_bold}%(code)s${reset} %(text)s

[testenv:pylint]
basepython = python3
deps =
    pyflakes
    pylint
commands =
    pylint src/bio2bel

[testenv:doc8]
basepython = python3
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 docs/source/

[testenv:build]
basepython = python3
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py -q sdist bdist_wheel

[testenv:release]
basepython = python3
skip_install = true
deps =
    {[testenv:build]deps}
    twine >= 1.5.0
commands =
    {[testenv:build]commands}
    twine upload --skip-existing dist/*

[testenv:finish]
basepython = python3
skip_install = true
whitelist_externals =
    /bin/git
    /usr/bin/git
deps =
    {[testenv:build]deps}
    {[testenv:release]deps}
    bumpversion
commands =
    {[testenv:build]commands}
    bumpversion release
    {[testenv:release]commands}
    git push
    bumpversion patch
